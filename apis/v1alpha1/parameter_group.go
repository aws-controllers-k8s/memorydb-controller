// Copyright Amazon.com Inc. or its affiliates. All Rights Reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License"). You may
// not use this file except in compliance with the License. A copy of the
// License is located at
//
//     http://aws.amazon.com/apache2.0/
//
// or in the "license" file accompanying this file. This file is distributed
// on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
// express or implied. See the License for the specific language governing
// permissions and limitations under the License.

// Code generated by ack-generate. DO NOT EDIT.

package v1alpha1

import (
	ackv1alpha1 "github.com/aws-controllers-k8s/runtime/apis/core/v1alpha1"
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
)

// ParameterGroupSpec defines the desired state of ParameterGroup.
//
// Represents the output of a CreateParameterGroup operation. A parameter group
// represents a combination of specific values for the parameters that are passed
// to the engine software during startup.
type ParameterGroupSpec struct {
	// An optional description of the parameter group.
	Description *string `json:"description,omitempty"`
	// The name of the parameter group family that the parameter group can be used
	// with.
	// +kubebuilder:validation:Required
	Family *string `json:"family"`
	// The name of the parameter group.
	// +kubebuilder:validation:Required
	Name *string `json:"name"`
	// An array of parameter names and values for the parameter update. You must
	// supply at least one parameter name and value; subsequent arguments are optional.
	// A maximum of 20 parameters may be updated per request.
	ParameterNameValues []*ParameterNameValue `json:"parameterNameValues,omitempty"`
	// A list of tags to be added to this resource. A tag is a key-value pair. A
	// tag key must be accompanied by a tag value, although null is accepted.
	Tags []*Tag `json:"tags,omitempty"`
}

// ParameterGroupStatus defines the observed state of ParameterGroup
type ParameterGroupStatus struct {
	// All CRs managed by ACK have a common `Status.ACKResourceMetadata` member
	// that is used to contain resource sync state, account ownership,
	// constructed ARN for the resource
	// +kubebuilder:validation:Optional
	ACKResourceMetadata *ackv1alpha1.ResourceMetadata `json:"ackResourceMetadata"`
	// All CRS managed by ACK have a common `Status.Conditions` member that
	// contains a collection of `ackv1alpha1.Condition` objects that describe
	// the various terminal states of the CR and its backend AWS service API
	// resource
	// +kubebuilder:validation:Optional
	Conditions []*ackv1alpha1.Condition `json:"conditions"`
	// A list of parameters specific to a particular parameter group. Each element
	// in the list contains detailed information about one parameter.
	// +kubebuilder:validation:Optional
	Parameters []*Parameter `json:"parameters,omitempty"`
}

// ParameterGroup is the Schema for the ParameterGroups API
// +kubebuilder:object:root=true
// +kubebuilder:subresource:status
type ParameterGroup struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ParameterGroupSpec   `json:"spec,omitempty"`
	Status            ParameterGroupStatus `json:"status,omitempty"`
}

// ParameterGroupList contains a list of ParameterGroup
// +kubebuilder:object:root=true
type ParameterGroupList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ParameterGroup `json:"items"`
}

func init() {
	SchemeBuilder.Register(&ParameterGroup{}, &ParameterGroupList{})
}
